<project name="test" xmlns:jacoco="antlib:org.jacoco.ant">

	<presetdef name="javac">
		<javac includeantruntime="false" />
	</presetdef>

	<target name="clean">
		<delete dir="build"/>
	</target>

	<target name="compile" depends="clean">
		<mkdir dir="build/classes"/>
		<javac srcdir="src/inte" destdir="build/classes"/>
	</target>

	<taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask"/>
	<property name="findbugs.home" value="findbugs" />

	<target name="findbugs">
		<findbugs home="${findbugs.home}"
              output="xml"
              outputFile="findbugs.xml" 
			  reportLevel="low">
			<sourcePath path="src/inte" />
			<class location="build/classes/inte" />
		</findbugs>
	</target>

	<target name="jar" depends="compile">
		<mkdir dir="build/jar"/>
		<jar destfile="build/jar/Test.jar" basedir="build/classes">
			<manifest>
				<attribute name="Main-Class" value="inte.workshops.Main"/>
			</manifest>
		</jar>
	</target>

	<target name="compileTest" depends="compile">
		<javac srcdir="src/test" destdir="build/classes">
			<classpath>
				<pathelement location="junit-4.12.jar" />
				<pathelement location="hamcrest-core-1.3.jar" />
			</classpath>
		</javac>
	</target>

	<taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
		<classpath path="jacoco/lib/jacocoant.jar"/>
	</taskdef>

	<target name="runTests" description="Run JUnit tests" depends="compileTest" >
		<jacoco:coverage destfile="remote.exec">
			<junit printsummary="yes" dir="build/classes" fork="true">
				<classpath>
					<pathelement location="build/classes" />
					<pathelement location="junit-4.12.jar" />
					<pathelement location="hamcrest-core-1.3.jar" />
				</classpath>
				<test name="test.inte.workshops.TestAll" haltonfailure="no" outfile="result">
					<formatter type="xml" />
				</test>
			</junit>
		</jacoco:coverage>
	</target>

	<target name="report" depends="runTests">
		<!--  Step 3: Create coverage report  -->
		<jacoco:report>
			<!--
			 This task needs the collected execution data and ... 
			-->
			<executiondata>
				<file file="remote.exec"/>
			</executiondata>
			<!--  the class files and optional source files ...  -->
			<structure name="JaCoCo Ant Example">
				<classfiles>
					<fileset dir="build/classes"/>
				</classfiles>
				<sourcefiles encoding="UTF-8">
					<fileset dir="build/classes"/>
				</sourcefiles>
			</structure>
			<!--  to produce reports in different formats.  -->
			<html destdir="reportJacoco/"/>
			<!--<csv destfile="reportJacoco/reportJacoco.csv"/>
			<xml destfile="reportJacoco/reportJacoco.xml"/>-->
		</jacoco:report>
	</target>
</project>